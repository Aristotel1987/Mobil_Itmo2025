# Документ требований к проекту "Теплотехника"

## 1. Функциональные требования

### 1.1. Управление расчетом экономии тепловой энергии:
- Система должна автоматически собирать информацию о текущей температуре и влажности в помещении и на улице. 
- частота сбора данных о температуре должна быть задаваема пользователем.
### 1.2. Мониторинг и отчетность:
- система должна показывать текущую ощущаемую температуру в каждый конкретный момент времени при входе в приложение
- Система должна предоставлять пользователю отчеты о возможной экономииэнергии за выбранный период.
- Должна быть возможность просмотра истории температурных изменений.
- Должна быть возможность ретроспективного расчета потенциальной экономии при общем снижении температуры внутри помещения.
- Должна быть возможность ретроспективного расчета потенциальной экономии при изменении времени нахождения пользователя в помещении (версия 2)
- должна быть возможность ретроспективного расчета потенциальной экономии при дополнительном утеплении ограждающих коннструкций (версия 3)
### 1.3. Настройка расписания:
-программа должна иметь 2 режима работы системы отопления "с людьми" и"эконом".( версия 2)
-программа должна иметь встроенный модуль "расписание", который задает режимы работы отопления. ( версия 2).
- Пользователь должен иметь возможность устанавливать время работы системы отопления в разных режимах на протяжении недели (версия 2)
-пользователь должен иметь возможность менять параметры режимов: температуру внутри помещения  ( версия 2)

## 2. Требования к внешним интерфейсам

### 2.1. Интерфейсы пользователя (UX)
- Интерфейс должен быть интуитивно понятным и простым в использовании.
- Должны быть реализованы визуальные элементы для отображения текущей эквивалентной температуры и влажности
- должен быть реализован раздел с историей наблюдений о температуре в том числе в визуализированном, графическом виде
-должен быть реализован раздел с потенциальной экономией: выбор альтернативного сценария и процент экономии расходов на отопление, как результат
- должен быть реализован раздел с настройкой параметров режимов работы системы: температуры внутри помещения, влажностью.
- должен быть реализован раздел с модулем "расписание", где пользователь настраивает время работы режимов отопления (версия 2)

### 2.2. Программные интерфейсы
- Система должна поддерживать API для интеграции с другими приложениями и сервисами (например, для получения данных о погоде).
- Должна быть возможность интеграции с системами умного дома (например, через протоколы MQTT или Zigbee).(версия 2)

### 2.3. Интерфейсы оборудования
- Система должна поддерживать взаимодействие с различными типами датчиков температуры и влажности
- система должна иметь несколько источников о погоде на улице для дублирования на случай отказа одного из соедениний 
- Должна быть возможность подключения к различным типам вентиляционного оборудования(вентиляторам, заслонкам, бризерам, приточно-вытяжным установкам) ( версия 3)
## 3. Нефункциональные требования

### 3.1. Требования к производительности
- Система должна обеспечивать время отклика не более 2 секунд на запросы пользователя.
- Должна быть возможность обработки данных от не менее чем 100 датчиков одновременно.

### 3.2. Требования к сохранности (данных)

- Все данные о пользователях и их настройках должны храниться в защищенной базе данных с регулярным резервным копированием.
- Должна быть реализована система восстановления данных в случае сбоя ( версия 2)
- все процедуры и хранилища данныхо помещении и температуре должны соответствовать требованиям закона Н-152 "О Персональных данных"

### 3.3. Требования к качеству программного обеспечения
- Код должен быть написан с соблюдением стандартов кодирования и проходить регулярное тестирование.
- Должна быть реализована система автоматического тестирования для проверки функциональности приложения.

### 3.4. Требования к безопасности системы
- Все данные пользователей должны быть защищены с использованием шифрования (например, SSL/TLS).
- Должна быть реализована система аутентификации пользователей 
- Необходимо проводить регулярные аудиты безопасности для выявления уязвимостей.
